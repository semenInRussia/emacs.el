#         _______   ______     ______    _______      __
#        /  _____| /  __  \   /  __  \  |       \    |  |
#       |  |  __  |  |  |  | |  |  |  | |  .--.  |   |  |
#       |  | |_ | |  |  |  | |  |  |  | |  |  |  |   |  |
#       |  |__| | |  `--'  | |  `--'  | |  '--'  |   |  |
#        \______|  \______/   \______/  |_______/    |  |
#                                                    |  |
#        __       __    __    ______  __  ___        |  |
#       |  |     |  |  |  |  /      ||  |/  /        |  |
#       |  |     |  |  |  | |  ,----'|  '  /         |  |
#       |  |     |  |  |  | |  |     |    <          |  |
#       |  `----.|  `--'  | |  `----.|  .  \         |__|
#       |_______| \______/   \______||__|\__\        (__)


- [[elisp:(helm-projectile-switch-project)][Open Project]]
- [[elisp:helm-multi-files][See Recent Files]]
- [[elisp:org-agenda-list][See Agenda]]
- [[elisp:(dired "~/projects")][Open Directory of Projects]]
- [[elisp:(let* ((link-on-github (read-string "Enter Link on Github: ")) (repository-name (-last-item (-last-item (s-match-strings-all "/\\(.*\\).git$" link-on-github)))) (project-name (read-string "Enter project's name: " repository-name)) (project-repo-path (f-join "~/projects/" repository-name)) (project-path (f-join "~/projects/" project-name))) (cd "~/projects/") (shell-command (s-concat "git clone " link-on-github)) (rename-file project-repo-path project-path) (projectile-add-known-project project-path) (projectile-switch-project-by-name project-name))][Clone a Project from GitHub]]
